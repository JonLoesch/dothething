CREATE TABLE "dothethang_notification_targets" (
	"notificationTargetId" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "dothethang_notification_targets_notificationTargetId_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"deleted_at" timestamp,
	"user_id" text NOT NULL,
	"title" varchar NOT NULL
);
--> statement-breakpoint
CREATE TABLE "dothethang_push_configs" (
	"pushConfigId" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "dothethang_push_configs_pushConfigId_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"deleted_at" timestamp,
	"target_id" integer NOT NULL,
	"ua" jsonb NOT NULL,
	"endpoint" varchar NOT NULL,
	"keys" jsonb NOT NULL,
	CONSTRAINT "dothethang_push_configs_endpoint_unique" UNIQUE("endpoint")
);
--> statement-breakpoint
CREATE TABLE "dothethang_recurring_tasks" (
	"recurringTaskId" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "dothethang_recurring_tasks_recurringTaskId_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"deleted_at" timestamp,
	"group_id" integer NOT NULL,
	"next_due_date" date NOT NULL,
	"last_accomplished_at" date NOT NULL,
	"title" varchar(255) NOT NULL,
	"schedule" jsonb NOT NULL
);
--> statement-breakpoint
CREATE TABLE "dothethang_subscriptions" (
	"subscriptionId" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "dothethang_subscriptions_subscriptionId_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"deleted_at" timestamp,
	"target_id" integer NOT NULL,
	"group_id" integer NOT NULL
);
--> statement-breakpoint
CREATE TABLE "dothethang_task_groups" (
	"taskGroupId" integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "dothethang_task_groups_taskGroupId_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START WITH 1 CACHE 1),
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"deleted_at" timestamp,
	"user_id" text NOT NULL,
	"title" varchar(255) NOT NULL,
	"last_notification" date NOT NULL,
	"time" varchar NOT NULL,
	"zone" varchar NOT NULL
);
--> statement-breakpoint
CREATE TABLE "dothethang_account" (
	"user_id" text NOT NULL,
	"type" varchar(255) NOT NULL,
	"provider" varchar(255) NOT NULL,
	"provider_account_id" varchar(255) NOT NULL,
	"refresh_token" text,
	"access_token" text,
	"expires_at" integer,
	"token_type" varchar(255),
	"scope" varchar(255),
	"id_token" text,
	"session_state" varchar(255),
	CONSTRAINT "dothethang_account_provider_provider_account_id_pk" PRIMARY KEY("provider","provider_account_id")
);
--> statement-breakpoint
CREATE TABLE "dothethang_session" (
	"session_token" varchar(255) PRIMARY KEY NOT NULL,
	"user_id" text NOT NULL,
	"expires" timestamp with time zone NOT NULL
);
--> statement-breakpoint
CREATE TABLE "dothethang_user" (
	"id" text PRIMARY KEY NOT NULL,
	"created_at" timestamp with time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
	"updated_at" timestamp with time zone NOT NULL,
	"deleted_at" timestamp,
	"name" varchar(255),
	"email" varchar(255) NOT NULL,
	"email_verified" timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
	"image" varchar(255)
);
--> statement-breakpoint
CREATE TABLE "dothethang_verification_token" (
	"identifier" varchar(255) NOT NULL,
	"token" varchar(255) NOT NULL,
	"expires" timestamp with time zone NOT NULL,
	CONSTRAINT "dothethang_verification_token_identifier_token_pk" PRIMARY KEY("identifier","token")
);
--> statement-breakpoint
ALTER TABLE "dothethang_notification_targets" ADD CONSTRAINT "dothethang_notification_targets_user_id_dothethang_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."dothethang_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_push_configs" ADD CONSTRAINT "notificationTargetId" FOREIGN KEY ("target_id") REFERENCES "public"."dothethang_notification_targets"("notificationTargetId") ON DELETE cascade ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_recurring_tasks" ADD CONSTRAINT "taskGroupId" FOREIGN KEY ("group_id") REFERENCES "public"."dothethang_task_groups"("taskGroupId") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_subscriptions" ADD CONSTRAINT "notificationTargetId" FOREIGN KEY ("target_id") REFERENCES "public"."dothethang_notification_targets"("notificationTargetId") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_subscriptions" ADD CONSTRAINT "taskGroupId" FOREIGN KEY ("group_id") REFERENCES "public"."dothethang_task_groups"("taskGroupId") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_task_groups" ADD CONSTRAINT "dothethang_task_groups_user_id_dothethang_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."dothethang_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_account" ADD CONSTRAINT "dothethang_account_user_id_dothethang_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."dothethang_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "dothethang_session" ADD CONSTRAINT "dothethang_session_user_id_dothethang_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."dothethang_user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "account_user_id_idx" ON "dothethang_account" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "t_user_id_idx" ON "dothethang_session" USING btree ("user_id");